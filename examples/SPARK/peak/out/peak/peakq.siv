*****************************************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
*****************************************************************************


CREATED 07-SEP-2011, 14:44:58  SIMPLIFIED 07-SEP-2011, 14:44:58

SPARK Simplifier GPL 2011
Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.

procedure peak.peakQ




For path(s) from start to run-time check associated with statement of line 31:

procedure_peakq_1.
*** true .          /* all conclusions proved */


For path(s) from start to precondition check associated with statement of line 
          32:

procedure_peakq_2.
H1:    x >= - 1 .
H2:    x <= 1 .
H3:    a < - (1 / 10) .
H4:    a >= - (6 / 5) .
H5:    a <= 6 / 5 .
H6:    b >= - (6 / 5) .
H7:    b <= 6 / 5 .
H8:    c >= - (6 / 5) .
H9:    c <= 6 / 5 .
H10:   a >= - 340282000000000000000000000000000000000 .
H11:   a <= 340282000000000000000000000000000000000 .
H12:   b >= - 340282000000000000000000000000000000000 .
H13:   b <= 340282000000000000000000000000000000000 .
H14:   c >= - 340282000000000000000000000000000000000 .
H15:   c <= 340282000000000000000000000000000000000 .
H16:   float__size >= 0 .
H17:   icoeff2__size >= 0 .
       ->
C1:    numeric__times(b, b) >= - 340282000000000000000000000000000000000 .
C2:    numeric__times(b, b) <= 340282000000000000000000000000000000000 .


For path(s) from start to precondition check associated with statement of line 
          32:

procedure_peakq_3.
H1:    x >= - 1 .
H2:    x <= 1 .
H3:    a < - (1 / 10) .
H4:    a >= - (6 / 5) .
H5:    a <= 6 / 5 .
H6:    b >= - (6 / 5) .
H7:    b <= 6 / 5 .
H8:    c >= - (6 / 5) .
H9:    c <= 6 / 5 .
H10:   a >= - 340282000000000000000000000000000000000 .
H11:   a <= 340282000000000000000000000000000000000 .
H12:   b >= - 340282000000000000000000000000000000000 .
H13:   b <= 340282000000000000000000000000000000000 .
H14:   c >= - 340282000000000000000000000000000000000 .
H15:   c <= 340282000000000000000000000000000000000 .
H16:   numeric__times(b, b) >= - 340282000000000000000000000000000000000 .
H17:   numeric__times(b, b) <= 340282000000000000000000000000000000000 .
H18:   float__size >= 0 .
H19:   icoeff2__size >= 0 .
       ->
C1:    numeric__times(4, a) >= - 340282000000000000000000000000000000000 .
C2:    numeric__times(4, a) <= 340282000000000000000000000000000000000 .


For path(s) from start to precondition check associated with statement of line 
          32:

procedure_peakq_4.
H1:    x >= - 1 .
H2:    x <= 1 .
H3:    a < - (1 / 10) .
H4:    a >= - (6 / 5) .
H5:    a <= 6 / 5 .
H6:    b >= - (6 / 5) .
H7:    b <= 6 / 5 .
H8:    c >= - (6 / 5) .
H9:    c <= 6 / 5 .
H10:   a >= - 340282000000000000000000000000000000000 .
H11:   a <= 340282000000000000000000000000000000000 .
H12:   b >= - 340282000000000000000000000000000000000 .
H13:   b <= 340282000000000000000000000000000000000 .
H14:   c >= - 340282000000000000000000000000000000000 .
H15:   c <= 340282000000000000000000000000000000000 .
H16:   numeric__times(b, b) >= - 340282000000000000000000000000000000000 .
H17:   numeric__times(b, b) <= 340282000000000000000000000000000000000 .
H18:   numeric__times(4, a) >= - 340282000000000000000000000000000000000 .
H19:   numeric__times(4, a) <= 340282000000000000000000000000000000000 .
H20:   float__size >= 0 .
H21:   icoeff2__size >= 0 .
       ->
C1:    numeric__divide(numeric__times(b, b), numeric__times(4, a)) >= - 
          340282000000000000000000000000000000000 .
C2:    numeric__divide(numeric__times(b, b), numeric__times(4, a)) <= 
          340282000000000000000000000000000000000 .


For path(s) from start to precondition check associated with statement of line 
          32:

procedure_peakq_5.
H1:    x >= - 1 .
H2:    x <= 1 .
H3:    a < - (1 / 10) .
H4:    a >= - (6 / 5) .
H5:    a <= 6 / 5 .
H6:    b >= - (6 / 5) .
H7:    b <= 6 / 5 .
H8:    c >= - (6 / 5) .
H9:    c <= 6 / 5 .
H10:   a >= - 340282000000000000000000000000000000000 .
H11:   a <= 340282000000000000000000000000000000000 .
H12:   b >= - 340282000000000000000000000000000000000 .
H13:   b <= 340282000000000000000000000000000000000 .
H14:   c >= - 340282000000000000000000000000000000000 .
H15:   c <= 340282000000000000000000000000000000000 .
H16:   numeric__times(b, b) >= - 340282000000000000000000000000000000000 .
H17:   numeric__times(b, b) <= 340282000000000000000000000000000000000 .
H18:   numeric__times(4, a) >= - 340282000000000000000000000000000000000 .
H19:   numeric__times(4, a) <= 340282000000000000000000000000000000000 .
H20:   numeric__divide(numeric__times(b, b), numeric__times(4, a)) >= - 
          340282000000000000000000000000000000000 .
H21:   numeric__divide(numeric__times(b, b), numeric__times(4, a)) <= 
          340282000000000000000000000000000000000 .
H22:   float__size >= 0 .
H23:   icoeff2__size >= 0 .
       ->
C1:    numeric__minus(c, numeric__divide(numeric__times(b, b), numeric__times(
          4, a))) >= - 340282000000000000000000000000000000000 .
C2:    numeric__minus(c, numeric__divide(numeric__times(b, b), numeric__times(
          4, a))) <= 340282000000000000000000000000000000000 .


For path(s) from start to run-time check associated with statement of line 32:

procedure_peakq_6.
*** true .          /* all conclusions proved */


For path(s) from start to finish:

procedure_peakq_7.
H1:    x >= - 1 .
H2:    x <= 1 .
H3:    a < - (1 / 10) .
H4:    a >= - (6 / 5) .
H5:    a <= 6 / 5 .
H6:    b >= - (6 / 5) .
H7:    b <= 6 / 5 .
H8:    c >= - (6 / 5) .
H9:    c <= 6 / 5 .
H10:   a >= - 340282000000000000000000000000000000000 .
H11:   a <= 340282000000000000000000000000000000000 .
H12:   b >= - 340282000000000000000000000000000000000 .
H13:   b <= 340282000000000000000000000000000000000 .
H14:   c >= - 340282000000000000000000000000000000000 .
H15:   c <= 340282000000000000000000000000000000000 .
H16:   numeric__times(b, b) >= - 340282000000000000000000000000000000000 .
H17:   numeric__times(b, b) <= 340282000000000000000000000000000000000 .
H18:   numeric__times(4, a) >= - 340282000000000000000000000000000000000 .
H19:   numeric__times(4, a) <= 340282000000000000000000000000000000000 .
H20:   numeric__divide(numeric__times(b, b), numeric__times(4, a)) >= - 
          340282000000000000000000000000000000000 .
H21:   numeric__divide(numeric__times(b, b), numeric__times(4, a)) <= 
          340282000000000000000000000000000000000 .
H22:   numeric__minus(c, numeric__divide(numeric__times(b, b), numeric__times(
          4, a))) >= - 340282000000000000000000000000000000000 .
H23:   numeric__minus(c, numeric__divide(numeric__times(b, b), numeric__times(
          4, a))) <= 340282000000000000000000000000000000000 .
H24:   float__size >= 0 .
H25:   icoeff2__size >= 0 .
       ->
C1:    numeric__minus(c, numeric__divide(numeric__times(b, b), numeric__times(
          4, a))) >= a * (x * x) + b * x + c - 1 / 10 .
C2:    numeric__minus(c, numeric__divide(numeric__times(b, b), numeric__times(
          4, a))) <= 10 .


