           *******************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
           *******************************************************


                        DATE : 06-SEP-2011 23:49:00.25

                               procedure sqrt




For path(s) from start to run-time check associated with statement of line 12:

procedure_sqrt_1.
H1:    1 <= x .
H2:    x <= 2 .
H3:    x >= float__first .
H4:    x <= float__last .
        ->
C1:    x >= float__first .
C2:    x <= float__last .
 

For path(s) from start to precondition check associated with statement of line 13:

procedure_sqrt_2.
H1:    1 <= x .
H2:    x <= 2 .
H3:    x >= float__first .
H4:    x <= float__last .
H5:    x >= float__first .
H6:    x <= float__last .
        ->
C1:    numeric__times((1/2), x) >= float__first .
C2:    numeric__times((1/2), x) <= float__last .
C3:    x >= float__first .
C4:    x <= float__last .
C5:    (1/2) >= float__first .
C6:    (1/2) <= float__last .
 

For path(s) from start to precondition check associated with statement of line 13:

procedure_sqrt_3.
H1:    1 <= x .
H2:    x <= 2 .
H3:    x >= float__first .
H4:    x <= float__last .
H5:    x >= float__first .
H6:    x <= float__last .
H7:    numeric__times((1/2), x) >= float__first .
H8:    numeric__times((1/2), x) <= float__last .
H9:    x >= float__first .
H10:   x <= float__last .
H11:   (1/2) >= float__first .
H12:   (1/2) <= float__last .
H13:   numeric__times((1/2), x) >= float__first .
H14:   numeric__times((1/2), x) <= float__last .
        ->
C1:    numeric__plus(numeric__times((1/2), x), (1/2)) >= 
           float__first .
C2:    numeric__plus(numeric__times((1/2), x), (1/2)) <= 
           float__last .
C3:    (1/2) >= float__first .
C4:    (1/2) <= float__last .
C5:    numeric__times((1/2), x) >= float__first .
C6:    numeric__times((1/2), x) <= float__last .
 

For path(s) from start to run-time check associated with statement of line 13:

procedure_sqrt_4.
H1:    1 <= x .
H2:    x <= 2 .
H3:    x >= float__first .
H4:    x <= float__last .
H5:    x >= float__first .
H6:    x <= float__last .
H7:    numeric__times((1/2), x) >= float__first .
H8:    numeric__times((1/2), x) <= float__last .
H9:    x >= float__first .
H10:   x <= float__last .
H11:   (1/2) >= float__first .
H12:   (1/2) <= float__last .
H13:   numeric__times((1/2), x) >= float__first .
H14:   numeric__times((1/2), x) <= float__last .
H15:   numeric__plus(numeric__times((1/2), x), (1/2)) >= 
           float__first .
H16:   numeric__plus(numeric__times((1/2), x), (1/2)) <= 
           float__last .
H17:   (1/2) >= float__first .
H18:   (1/2) <= float__last .
H19:   numeric__times((1/2), x) >= float__first .
H20:   numeric__times((1/2), x) <= float__last .
H21:   numeric__plus(numeric__times((1/2), x), (1/2)) >= 
           float__first .
H22:   numeric__plus(numeric__times((1/2), x), (1/2)) <= 
           float__last .
        ->
C1:    numeric__plus(numeric__times((1/2), x), (1/2)) >= 
           float__first .
C2:    numeric__plus(numeric__times((1/2), x), (1/2)) <= 
           float__last .
 

For path(s) from start to assertion of line 15:

procedure_sqrt_5.
H1:    1 <= x .
H2:    x <= 2 .
H3:    x >= float__first .
H4:    x <= float__last .
H5:    x >= float__first .
H6:    x <= float__last .
H7:    numeric__times((1/2), x) >= float__first .
H8:    numeric__times((1/2), x) <= float__last .
H9:    x >= float__first .
H10:   x <= float__last .
H11:   (1/2) >= float__first .
H12:   (1/2) <= float__last .
H13:   numeric__times((1/2), x) >= float__first .
H14:   numeric__times((1/2), x) <= float__last .
H15:   numeric__plus(numeric__times((1/2), x), (1/2)) >= 
           float__first .
H16:   numeric__plus(numeric__times((1/2), x), (1/2)) <= 
           float__last .
H17:   (1/2) >= float__first .
H18:   (1/2) <= float__last .
H19:   numeric__times((1/2), x) >= float__first .
H20:   numeric__times((1/2), x) <= float__last .
H21:   numeric__plus(numeric__times((1/2), x), (1/2)) >= 
           float__first .
H22:   numeric__plus(numeric__times((1/2), x), (1/2)) <= 
           float__last .
H23:   numeric__plus(numeric__times((1/2), x), (1/2)) >= 
           float__first .
H24:   numeric__plus(numeric__times((1/2), x), (1/2)) <= 
           float__last .
H25:   numeric__plus(numeric__times((1/2), x), (1/2)) >= 
           float__first .
H26:   numeric__plus(numeric__times((1/2), x), (1/2)) <= 
           float__last .
H27:   x >= float__first .
H28:   x <= float__last .
H29:   numeric__plus(numeric__times((1/2), x), (1/2)) <> x .
        ->
C1:    numeric__plus(numeric__times((1/2), x), (1/2)) >=  -((1/4) * 
           x ** 2) + x .
C2:    numeric__plus(numeric__times((1/2), x), (1/2)) <= (1/4) * 
           x ** 2 + 1 .
C3:    x >= float__first .
C4:    x <= float__last .
C5:    1 <= x .
C6:    x <= 2 .
 

For path(s) from assertion of line 15 to assertion of line 15:

procedure_sqrt_6.
H1:    r >=  -((1/4) * x ** 2) + x .
H2:    r <= (1/4) * x ** 2 + 1 .
H3:    x >= float__first .
H4:    x <= float__last .
H5:    1 <= x .
H6:    x <= 2 .
H7:    r >= float__first .
H8:    r <= float__last .
H9:    r >= float__first .
H10:   r <= float__last .
H11:   r >= float__first .
H12:   r <= float__last .
H13:   numeric__divide(x, r) >= float__first .
H14:   numeric__divide(x, r) <= float__last .
H15:   r >= float__first .
H16:   r <= float__last .
H17:   x >= float__first .
H18:   x <= float__last .
H19:   r >= float__first .
H20:   r <= float__last .
H21:   (1/2) >= float__first .
H22:   (1/2) <= float__last .
H23:   numeric__divide(x, r) >= float__first .
H24:   numeric__divide(x, r) <= float__last .
H25:   numeric__plus(r, numeric__divide(x, r)) >= float__first .
H26:   numeric__plus(r, numeric__divide(x, r)) <= float__last .
H27:   numeric__divide(x, r) >= float__first .
H28:   numeric__divide(x, r) <= float__last .
H29:   numeric__plus(r, numeric__divide(x, r)) >= float__first .
H30:   numeric__plus(r, numeric__divide(x, r)) <= float__last .
H31:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) >= float__first .
H32:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) <= float__last .
H33:   numeric__plus(r, numeric__divide(x, r)) >= float__first .
H34:   numeric__plus(r, numeric__divide(x, r)) <= float__last .
H35:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) >= float__first .
H36:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) <= float__last .
H37:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) >= float__first .
H38:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) <= float__last .
H39:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) >= float__first .
H40:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) <= float__last .
H41:   r >= float__first .
H42:   r <= float__last .
H43:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) <> r .
        ->
C1:    numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) >=  -((1/4) * x ** 2) + x .
C2:    numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) <= (1/4) * x ** 2 + 1 .
C3:    x >= float__first .
C4:    x <= float__last .
C5:    1 <= x .
C6:    x <= 2 .
 

For path(s) from assertion of line 15 to run-time check associated with statement of line 16:

procedure_sqrt_7.
H1:    r >=  -((1/4) * x ** 2) + x .
H2:    r <= (1/4) * x ** 2 + 1 .
H3:    x >= float__first .
H4:    x <= float__last .
H5:    1 <= x .
H6:    x <= 2 .
H7:    r >= float__first .
H8:    r <= float__last .
        ->
C1:    r >= float__first .
C2:    r <= float__last .
 

For path(s) from assertion of line 15 to precondition check associated with statement of line 17:

procedure_sqrt_8.
H1:    r >=  -((1/4) * x ** 2) + x .
H2:    r <= (1/4) * x ** 2 + 1 .
H3:    x >= float__first .
H4:    x <= float__last .
H5:    1 <= x .
H6:    x <= 2 .
H7:    r >= float__first .
H8:    r <= float__last .
H9:    r >= float__first .
H10:   r <= float__last .
H11:   r >= float__first .
H12:   r <= float__last .
        ->
C1:    numeric__divide(x, r) >= float__first .
C2:    numeric__divide(x, r) <= float__last .
C3:    r >= float__first .
C4:    r <= float__last .
C5:    x >= float__first .
C6:    x <= float__last .
C7:    r >= float__first .
C8:    r <= float__last .
C9:    (1/2) >= float__first .
C10:   (1/2) <= float__last .
 

For path(s) from assertion of line 15 to precondition check associated with statement of line 17:

procedure_sqrt_9.
H1:    r >=  -((1/4) * x ** 2) + x .
H2:    r <= (1/4) * x ** 2 + 1 .
H3:    x >= float__first .
H4:    x <= float__last .
H5:    1 <= x .
H6:    x <= 2 .
H7:    r >= float__first .
H8:    r <= float__last .
H9:    r >= float__first .
H10:   r <= float__last .
H11:   r >= float__first .
H12:   r <= float__last .
H13:   numeric__divide(x, r) >= float__first .
H14:   numeric__divide(x, r) <= float__last .
H15:   r >= float__first .
H16:   r <= float__last .
H17:   x >= float__first .
H18:   x <= float__last .
H19:   r >= float__first .
H20:   r <= float__last .
H21:   (1/2) >= float__first .
H22:   (1/2) <= float__last .
H23:   numeric__divide(x, r) >= float__first .
H24:   numeric__divide(x, r) <= float__last .
        ->
C1:    numeric__plus(r, numeric__divide(x, r)) >= float__first .
C2:    numeric__plus(r, numeric__divide(x, r)) <= float__last .
C3:    numeric__divide(x, r) >= float__first .
C4:    numeric__divide(x, r) <= float__last .
 

For path(s) from assertion of line 15 to precondition check associated with statement of line 17:

procedure_sqrt_10.
H1:    r >=  -((1/4) * x ** 2) + x .
H2:    r <= (1/4) * x ** 2 + 1 .
H3:    x >= float__first .
H4:    x <= float__last .
H5:    1 <= x .
H6:    x <= 2 .
H7:    r >= float__first .
H8:    r <= float__last .
H9:    r >= float__first .
H10:   r <= float__last .
H11:   r >= float__first .
H12:   r <= float__last .
H13:   numeric__divide(x, r) >= float__first .
H14:   numeric__divide(x, r) <= float__last .
H15:   r >= float__first .
H16:   r <= float__last .
H17:   x >= float__first .
H18:   x <= float__last .
H19:   r >= float__first .
H20:   r <= float__last .
H21:   (1/2) >= float__first .
H22:   (1/2) <= float__last .
H23:   numeric__divide(x, r) >= float__first .
H24:   numeric__divide(x, r) <= float__last .
H25:   numeric__plus(r, numeric__divide(x, r)) >= float__first .
H26:   numeric__plus(r, numeric__divide(x, r)) <= float__last .
H27:   numeric__divide(x, r) >= float__first .
H28:   numeric__divide(x, r) <= float__last .
H29:   numeric__plus(r, numeric__divide(x, r)) >= float__first .
H30:   numeric__plus(r, numeric__divide(x, r)) <= float__last .
        ->
C1:    numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) >= float__first .
C2:    numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) <= float__last .
C3:    numeric__plus(r, numeric__divide(x, r)) >= float__first .
C4:    numeric__plus(r, numeric__divide(x, r)) <= float__last .
 

For path(s) from assertion of line 15 to run-time check associated with statement of line 17:

procedure_sqrt_11.
H1:    r >=  -((1/4) * x ** 2) + x .
H2:    r <= (1/4) * x ** 2 + 1 .
H3:    x >= float__first .
H4:    x <= float__last .
H5:    1 <= x .
H6:    x <= 2 .
H7:    r >= float__first .
H8:    r <= float__last .
H9:    r >= float__first .
H10:   r <= float__last .
H11:   r >= float__first .
H12:   r <= float__last .
H13:   numeric__divide(x, r) >= float__first .
H14:   numeric__divide(x, r) <= float__last .
H15:   r >= float__first .
H16:   r <= float__last .
H17:   x >= float__first .
H18:   x <= float__last .
H19:   r >= float__first .
H20:   r <= float__last .
H21:   (1/2) >= float__first .
H22:   (1/2) <= float__last .
H23:   numeric__divide(x, r) >= float__first .
H24:   numeric__divide(x, r) <= float__last .
H25:   numeric__plus(r, numeric__divide(x, r)) >= float__first .
H26:   numeric__plus(r, numeric__divide(x, r)) <= float__last .
H27:   numeric__divide(x, r) >= float__first .
H28:   numeric__divide(x, r) <= float__last .
H29:   numeric__plus(r, numeric__divide(x, r)) >= float__first .
H30:   numeric__plus(r, numeric__divide(x, r)) <= float__last .
H31:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) >= float__first .
H32:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) <= float__last .
H33:   numeric__plus(r, numeric__divide(x, r)) >= float__first .
H34:   numeric__plus(r, numeric__divide(x, r)) <= float__last .
H35:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) >= float__first .
H36:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) <= float__last .
        ->
C1:    numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) >= float__first .
C2:    numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) <= float__last .
 

For path(s) from start to finish:

procedure_sqrt_12.
H1:    1 <= x .
H2:    x <= 2 .
H3:    x >= float__first .
H4:    x <= float__last .
H5:    x >= float__first .
H6:    x <= float__last .
H7:    numeric__times((1/2), x) >= float__first .
H8:    numeric__times((1/2), x) <= float__last .
H9:    x >= float__first .
H10:   x <= float__last .
H11:   (1/2) >= float__first .
H12:   (1/2) <= float__last .
H13:   numeric__times((1/2), x) >= float__first .
H14:   numeric__times((1/2), x) <= float__last .
H15:   numeric__plus(numeric__times((1/2), x), (1/2)) >= 
           float__first .
H16:   numeric__plus(numeric__times((1/2), x), (1/2)) <= 
           float__last .
H17:   (1/2) >= float__first .
H18:   (1/2) <= float__last .
H19:   numeric__times((1/2), x) >= float__first .
H20:   numeric__times((1/2), x) <= float__last .
H21:   numeric__plus(numeric__times((1/2), x), (1/2)) >= 
           float__first .
H22:   numeric__plus(numeric__times((1/2), x), (1/2)) <= 
           float__last .
H23:   numeric__plus(numeric__times((1/2), x), (1/2)) >= 
           float__first .
H24:   numeric__plus(numeric__times((1/2), x), (1/2)) <= 
           float__last .
H25:   numeric__plus(numeric__times((1/2), x), (1/2)) >= 
           float__first .
H26:   numeric__plus(numeric__times((1/2), x), (1/2)) <= 
           float__last .
H27:   x >= float__first .
H28:   x <= float__last .
H29:   not (numeric__plus(numeric__times((1/2), x), (1/2)) <> 
           x) .
        ->
C1:    numeric__plus(numeric__times((1/2), x), (1/2)) >= 
           float__first .
C2:    numeric__plus(numeric__times((1/2), x), (1/2)) <= 
           float__last .
C3:    numeric__plus(numeric__times((1/2), x), (1/2)) <= (1 + 4 * 
           numeric__epsrel) * exact__sqrt(x) .
 

For path(s) from assertion of line 15 to finish:

procedure_sqrt_13.
H1:    r >=  -((1/4) * x ** 2) + x .
H2:    r <= (1/4) * x ** 2 + 1 .
H3:    x >= float__first .
H4:    x <= float__last .
H5:    1 <= x .
H6:    x <= 2 .
H7:    r >= float__first .
H8:    r <= float__last .
H9:    r >= float__first .
H10:   r <= float__last .
H11:   r >= float__first .
H12:   r <= float__last .
H13:   numeric__divide(x, r) >= float__first .
H14:   numeric__divide(x, r) <= float__last .
H15:   r >= float__first .
H16:   r <= float__last .
H17:   x >= float__first .
H18:   x <= float__last .
H19:   r >= float__first .
H20:   r <= float__last .
H21:   (1/2) >= float__first .
H22:   (1/2) <= float__last .
H23:   numeric__divide(x, r) >= float__first .
H24:   numeric__divide(x, r) <= float__last .
H25:   numeric__plus(r, numeric__divide(x, r)) >= float__first .
H26:   numeric__plus(r, numeric__divide(x, r)) <= float__last .
H27:   numeric__divide(x, r) >= float__first .
H28:   numeric__divide(x, r) <= float__last .
H29:   numeric__plus(r, numeric__divide(x, r)) >= float__first .
H30:   numeric__plus(r, numeric__divide(x, r)) <= float__last .
H31:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) >= float__first .
H32:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) <= float__last .
H33:   numeric__plus(r, numeric__divide(x, r)) >= float__first .
H34:   numeric__plus(r, numeric__divide(x, r)) <= float__last .
H35:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) >= float__first .
H36:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) <= float__last .
H37:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) >= float__first .
H38:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) <= float__last .
H39:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) >= float__first .
H40:   numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) <= float__last .
H41:   r >= float__first .
H42:   r <= float__last .
H43:   not (numeric__times((1/2), numeric__plus(r, 
           numeric__divide(x, r))) <> r) .
        ->
C1:    numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) >= float__first .
C2:    numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) <= float__last .
C3:    numeric__times((1/2), numeric__plus(r, numeric__divide(
           x, r))) <= (1 + 4 * numeric__epsrel) * exact__sqrt(
           x) .
 

